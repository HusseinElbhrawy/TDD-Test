// Mocks generated by Mockito 5.3.0 from annotations
// in flutter_tdd_testing/test/cubit/posts_cubit_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:flutter_tdd_testing/models/post_model.dart' as _i2;
import 'package:flutter_tdd_testing/repository/posts_repo.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakePostModel_0 extends _i1.SmartFake implements _i2.PostModel {
  _FakePostModel_0(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

/// A class which mocks [PostsRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockPostsRepository extends _i1.Mock implements _i3.PostsRepository {
  MockPostsRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<_i2.PostModel>> getPosts() => (super.noSuchMethod(
          Invocation.method(#getPosts, []),
          returnValue: _i4.Future<List<_i2.PostModel>>.value(<_i2.PostModel>[]))
      as _i4.Future<List<_i2.PostModel>>);
  @override
  _i4.Future<_i2.PostModel> getOnePost() =>
      (super.noSuchMethod(Invocation.method(#getOnePost, []),
              returnValue: _i4.Future<_i2.PostModel>.value(
                  _FakePostModel_0(this, Invocation.method(#getOnePost, []))))
          as _i4.Future<_i2.PostModel>);
  @override
  _i4.Future<_i2.PostModel> postOnePost() =>
      (super.noSuchMethod(Invocation.method(#postOnePost, []),
              returnValue: _i4.Future<_i2.PostModel>.value(
                  _FakePostModel_0(this, Invocation.method(#postOnePost, []))))
          as _i4.Future<_i2.PostModel>);
  @override
  _i4.Future<_i2.PostModel> putOnePost() =>
      (super.noSuchMethod(Invocation.method(#putOnePost, []),
              returnValue: _i4.Future<_i2.PostModel>.value(
                  _FakePostModel_0(this, Invocation.method(#putOnePost, []))))
          as _i4.Future<_i2.PostModel>);
  @override
  _i4.Future<void> deletePost() => (super.noSuchMethod(
      Invocation.method(#deletePost, []),
      returnValue: _i4.Future<void>.value(),
      returnValueForMissingStub: _i4.Future<void>.value()) as _i4.Future<void>);
}
